package week4;

import java.util.*;
import edu.duke.*;

public class VigenereBreaker {
    private HashMap<String, HashSet<String>> dicts; 
	public String sliceString(String message, int whichSlice, int totalSlices) {
       StringBuilder sb = new StringBuilder();
       char[] ca = message.toCharArray();
       for(int i = whichSlice; i < ca.length; i += totalSlices){
    	   sb.append(ca[i]);
       }
       return sb.toString();
    }
    //得出分解体，以及对应每个分解体的key
    public int[] tryKeyLength(String encrypted, int klength, char mostCommon) {
        int[] key = new int[klength];
        CaesarCracker cc = new CaesarCracker(mostCommon);
        for(int i = 0; i < klength; i++){
        	String slice = sliceString(encrypted,i,klength);
        	key[i] = cc.getKey(slice);
        }
        return key;
    }
    
    public HashSet<String> readDictionary(FileResource fr){
    	HashSet<String> set = new HashSet<String>();
    	for(String word:fr.words()){
    		set.add(word.toLowerCase());
    	}
    	return set;
    }
    public int countWords(String message, HashSet<String> dict){
    	int count = 0;
    	message = message.toLowerCase();
    	String[] words = message.split("\\W+");
    	for(String tempWord:words){
    		if(dict.contains(tempWord)){
    			count++;
    		}
    	}
    	return count;
    }
    //用1-100来尝试解码
    public String breakForLanguage(String encrypted, HashSet<String> dict){
    	HashMap<int[], Integer> keysMap = new HashMap<int[], Integer>();
    	for(int i = 57; i <= 57; i++){
    		int[] key = tryKeyLength(encrypted,i,'e');
    		VigenereCipher vc = new VigenereCipher(key);
    		String decrypted = vc.decrypt(encrypted);
    		int cnt = countWords(decrypted,dict);
    		keysMap.put(key,cnt);//这串钥匙对应解出来的字
    	}
    	int maxCount = 0;
    	int[] foundKey = null;
    	for(int[] key:keysMap.keySet()){
    		if(maxCount < keysMap.get(key)){
    			maxCount = keysMap.get(key);
    			foundKey = key;
    		}
    	}
    	System.out.println("The keys are: " + foundKey.length+" They are ");
    	for(int i = 0; i < foundKey.length; i++){
    		System.out.print(foundKey[i]+"\t");
    	}
    		System.out.println("");
    	VigenereCipher vc = new VigenereCipher(foundKey);
    	System.out.println("Decrypted words are: "+countWords(vc.decrypt(encrypted),dict));
    	return vc.decrypt(encrypted);
    }

    public void breakVigenere () {
       FileResource fr = new FileResource();
       String input = fr.asString();
       FileResource fr1 = new FileResource();
       HashSet<String> dict = readDictionary(fr1);
//       int[] key = tryKeyLength(input,4,'e');
//       VigenereCipher vc = new VigenereCipher(key);
       String decrypted = breakForLanguage(input,dict);
       System.out.println(decrypted);
    }
    
    
    public static void main(String args[]){

    	VigenereBreaker vb = new VigenereBreaker();
//    	System.out.println(vb.sliceString("abcdefghijklm",0,3));
//    	FileResource fr = new FileResource();
//        String input = fr.asString();
//    	int[] key = vb.tryKeyLength(input,4,'e');
//    	for(int i = 0; i < key.length; i++){
//    		System.out.println(key[i]);
//    	}
    	vb.breakVigenere();
    }
    
}
