package week2;

import java.util.ArrayList;

import java.util.List;

import edu.duke.FileResource;

//public class CharactersInPlay {
//	private List<String> names;
//	private List<Integer> freqs;
//	public CharactersInPlay(){
//		names = new ArrayList<String>();
//		freqs = new ArrayList<Integer>();
//	}
//	public void update(String person){
//		if(person.length() == 0) return;
//		int idx = names.indexOf(person);
//		if(idx == -1){
//			names.add(person);
//			freqs.add(1);
//		}
//		else{
//			int freq = freqs.get(idx);
//			freqs.set(idx,freq+1);
//		}
//		
//		
//	
//	}
//	public void findAllCharacters(){
//		FileResource fr = new FileResource();
//		names.clear();
//		freqs.clear();
//		for(String line:fr.lines()){
//			update(getPerson(line));
//		}
//		
//	}
//	public String getPerson(String line){
//		String[] splitLine = line.split("\\.");
////		int idx = line.indexOf("\\.");
////		if(idx == -1) {
////			return "";
////		}
////		String oriName = line.substring(0,idx);
////		return oriName;
////		if(oriName)
//		return splitLine[0].trim();
//	}
//	public void tester(){
//		findAllCharacters();
////		for(int k = 0; k < names.size();k++){
////			System.out.println(freqs.get(k)+"--->"+names.get(k));
////		}
////		charactersWithNumParts(70,100);
//		int idx = findIndexOfMax();
//		System.out.println("Most"+names.get(idx)+freqs.get(idx));
//	}
//	public void charactersWithNumParts(int num1, int num2){
//		for(int i = 0; i < names.size(); i++){
//			int freq = freqs.get(i);
//			if(freq>=num1&&freq<=num2){
//				String name = names.get(i);
//				System.out.println("name is "+name+" freq is "+freq);
//			}
//		}
//	}
//	
//	public int findIndexOfMax() {
//        int indOfMax=0;
//        int maxSoFar = freqs.get(indOfMax);
//        for (int i=1; i<freqs.size(); i++) {
//            int iFreq = freqs.get(i);
//            if (iFreq > maxSoFar) {
//                indOfMax = i;
//                maxSoFar = iFreq;
//            }
//        
//        }
//        return indOfMax;
//    }
//	public static void main(String args[]){
//		CharactersInPlay cip = new CharactersInPlay();
//		cip.tester();
//		
//	}
//
//}

public class CharactersInPlay {
    private ArrayList<Integer> myFreqs;
    private ArrayList<String> myWords;
    
    public CharactersInPlay() {
        myWords = new ArrayList<String>();
        myFreqs = new ArrayList<Integer>();
    }
    
    private void update(String person) {
        //person = person.toLowerCase();
        int index = myWords.indexOf(person);
        if (index == -1) {
            myWords.add(person);
            myFreqs.add(1);
        }
        else {
            int freq = myFreqs.get(index);
            myFreqs.set(index, freq+1);
        }
    }
    
    private void findAllCharacters() {
        FileResource fr = new FileResource();
        for (String line: fr.lines()) {
            int index = line.indexOf(".");
            if (index > -1) {
                int nonblank = 0;
                while (nonblank < index) {
                    if (!line.substring(nonblank, nonblank+1).equals(" ")) break;
                    else nonblank = nonblank + 1;
                }
                String person = line.substring(nonblank, index);
                update(person);
            }
        }
    }
    
    private int findIndexOfMax() {
        int current = myFreqs.get(0);
        int index = 0;
        for (int k = 0; k < myFreqs.size(); k++) {
            int newone = myFreqs.get(k);
            if (newone > current) {
                current = newone;
                index = k;
            }
            
        }
        return index;
    }
    
    private void charactersWithNumParts(int num1, int num2) {
        for (int k = 0; k < myWords.size(); k++) {
            if (myFreqs.get(k)>=num1 && myFreqs.get(k) <= num2) 
                System.out.println(myWords.get(k) + ": "+ myFreqs.get(k)+ "\t");
        }
    }
    
    public void testfindAllCharacters() {
        findAllCharacters();
        charactersWithNumParts(10, 150);
        int biggest = findIndexOfMax();
        System.out.println("The word with highest frequency is: "+myWords.get(biggest)+" with "+myFreqs.get(biggest));
    }
    public static void main(String args[]){
    	CharactersInPlay cip = new CharactersInPlay();
    	cip.testfindAllCharacters();
    }
}
